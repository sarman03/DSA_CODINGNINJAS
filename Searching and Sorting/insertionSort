Code Insertion Sort

You are given an integer array 'arr' of size 'N'.
You must sort this array using 'Insertion Sort' recursively.

Note:
Change in the input array itself. You don't need to return or print the elements.

Example:
Input: ‘N’ = 7
'arr' = [2, 13, 4, 1, 3, 6, 28]
Output: [1 2 3 4 6 13 28]

Explanation: After applying insertion sort on the input array, the output is [1 2 3 4 6 13 28].

Input format :
The first line contains an integer 'N' representing the size of the array.
The second line contains 'N' single space-separated integers representing the elements of the array.

Output Format :
Print the array elements in sorted order, separated by a single space.






#include<iostream>
#include "solution.h"
using namespace std;

void insertionSort(int *input, int size){
    for(int i=1; i<size; i++){
        int curr=input[i];
        int j;
        for(j=i-1; j>=0; j--){
            if(curr<input[j]){
                input[j+1]=input[j];
            }else{
                break;
            }
        }
        input[j+1]=curr;
    }
}
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    insertionSort(arr,n);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}
