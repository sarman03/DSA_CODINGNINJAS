Second Largest

Take input a stream of n integer elements, find the second largest element present.
The given elements can contain duplicate elements as well. If only 0 or 1 element is given, the second largest should be INT_MIN ( - 2^31 ).

Input format :
Line 1 : Total number of elements (n)
Line 2 : N elements (separated by space)

Sample Input 1:
 4
 3 9 0 9
Sample Output 1:
 3
Sample Input 2 :
 2
 4 4
Sample Output 2:
 -2147483648





#include <iostream>
#include<climits>
using namespace std;
int main() {
    int n;
    cin >> n;
int arr[n];
    for(int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    int largest = arr[0];
    int second_largest = INT_MIN;
for(int i = 1; i < n; i++) {
        if(arr[i] > largest) {
            second_largest = largest;
            largest = arr[i];
        }
        else if(arr[i] > second_largest && arr[i] != largest) {
            second_largest = arr[i];
        }
    }
        cout <<second_largest << "\n";

    return 0;
}

